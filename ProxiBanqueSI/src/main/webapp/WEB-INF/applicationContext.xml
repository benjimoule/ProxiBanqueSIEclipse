<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

	<context:property-placeholder location="classpath*:sgbd.properties" />

		
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/db_proxi_banque" />
		<property name="username" value="root" />
		<property name="password" value="1234" />
	</bean>

<!-- 	 Définition du sessionFactory avec ref au bean dataSource  -->
<!-- 	 BEWARE if you use Hibernate 3, use instead class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean  -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.adaming.entities" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">false</prop>
				<prop key="hibernate.query.substitutions">true 1, false 0, yes 'Y', no 'N'</prop>
				<prop key="hibernate.connection.isolation">2</prop>
				<prop key="hibernate.max_fetch_depth">1</prop>
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
	</bean>

<!-- 	 Définition du gestionnaire de transaction avec ref au bean sessionFactory  -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>

            </bean>
<!--              pour utiliser les annotations spring  -->
            <context:annotation-config />
<!--              package contenant les classes annotées spring  -->
            <context:component-scan base-package="com" />
<!--              prise en compte du gestionnaire de transaction pour @Transactional  -->
            <tx:annotation-driven transaction-manager="transactionManager" />
    
</beans>